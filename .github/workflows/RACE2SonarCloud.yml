name: Build main

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: 'RACE2'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './'
  DOTNET_VERSION: '8.0.x'
  DOTNET_VERSION_3: '3.1.x'

jobs:
  lint-code-base:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Setup .NET ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup .NET ${{ env.DOTNET_VERSION_3 }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION_3 }}

    - name: Super Lint Code Base
      uses: docker://ghcr.io/github/super-linter:v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run-sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Setup .NET ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup .NET ${{ env.DOTNET_VERSION_3 }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION_3 }}

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11

    - name: Restore tools
      shell: bash
      run: |
        dotnet tool restore

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: bash
      run: |
        dotnet dotnet-sonarscanner begin /k:"DEFRA_gwa-etl-dotnet" /o:"defra" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.dotcover.reportsPaths="dotCover.Output.html"
        dotnet build ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        dotnet dotnet-dotcover test --dcReportType=Html ./Tests
        dotnet dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
