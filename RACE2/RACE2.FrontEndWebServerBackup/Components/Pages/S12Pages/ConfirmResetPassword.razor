@page "/confirm-reset-password"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@using Microsoft.AspNetCore.Authorization
@using RACE2.FrontEndWebServer.Components
@using RACE2.DataModel
@using RACE2.Dto
@using RACE2.Services
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserService userService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<HeaderWithBanner />

<div class="govuk-width-container ">

    <FeedbackBannerSignIn />

    <a class="govuk-back-link" href="javascript:history.back()">Back</a>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">


            <div class="govuk-panel govuk-panel--confirmation govuk-!-margin-top-9">
                <h1 class="govuk-panel__title">
                    Your password has been reset.
                </h1>
            </div>

            <p class="govuk-body">
                Continue to login with reset password.
            </p>

            <button ole="button" draggable="false" class="govuk-button govuk-!-margin-top-6 govuk-!-margin-bottom-6"
                    data-module="govuk-button" @onclick="GoToNextPage">
                Continue
            </button>

        </div>
    </div>


    <main class="govuk-main-wrapper govuk-main-wrapper--auto-spacing" id="main-content" role="main">

    </main>
</div>

@code {
    private string UserName { get; set; } = "Unknown";
    private UserDetail UserDetail { get; set; } = default!;

    protected override async void OnInitialized()
    {
        AuthenticationState authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        UserName = authState.User.Claims.ToList().FirstOrDefault(c => c.Type == "name").Value;
        UserSpecificDto userDetails = await userService.GetUserByEmailID(UserName);
        UserDetail = new UserDetail()
            {
                UserName = UserName,
                Id = userDetails.Id,
                Email = userDetails.Email,
                c_first_name = userDetails.c_first_name,
                c_last_name = userDetails.c_last_name,
                c_IsFirstTimeUser = userDetails.c_IsFirstTimeUser
            };
        if (UserDetail.c_IsFirstTimeUser)
        {
            userService.UpdateFirstTimeUserLogin(userDetails.Email);
        }

        base.OnInitializedAsync();
    }

    public void GoToNextPage()
    {
        bool forceLoad = true;
        string pagelink = "/login";
        NavigationManager.NavigateTo(pagelink, forceLoad);
    }
}
