@inject NavigationManager Navigation

@code {
    // [CascadingParameter]
    // public Task<AuthenticationState> AuthenticationStateTask { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Navigation.NavigateTo("/logout", true);

        // Navigation.NavigateTo($"/login?returnUrl={Uri.EscapeDataString(Navigation.Uri)}");

        // var authenticationState = await AuthenticationStateTask;
        // if (authenticationState?.User?.Identity is null || !authenticationState.User.Identity.IsAuthenticated)
        // {
        //     var returnUri = Navigation.ToBaseRelativePath(Navigation.Uri);
        //     if (string.IsNullOrWhiteSpace(returnUri))
        //     {
        //         Navigation.NavigateTo("/login", true);
        //     }
        //     else
        //     {
        //         Navigation.NavigateTo($"/login?returnUrl={Uri.EscapeDataString(Navigation.Uri)}");
        //     }
        // }
    }
}