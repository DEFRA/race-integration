@page "/send-your-statement"
@using Microsoft.AspNetCore.Authorization
@using RACE2.FrontEndWebServer.Components
@using RACE2.Dto
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStore

@attribute [Authorize]

<PageTitle>Who the statement will go to - Send a supervising engineer's annual statement - GOV.UK</PageTitle>
<HeaderWithBanner />

<div class="govuk-width-container" style="min-height: 69vh;">

    <FeedbackBannerSignOut />

    <main id="main-content" class="govuk-main-wrapper--auto-spacing" role="main">

        <a class="govuk-back-link" @onclick="GoToPrevPage" style="color:black">Back</a>

        <div class="govuk-grid-row">

            <div class="govuk-grid-column-two-thirds">
                @if (!YesNoError)
                {
                    <div class="govuk-form-group">
                        <h1 class="govuk-heading-xl">
                            Who the statement will go to
                        </h1>
                        <p class="govuk-body">
                            The statement will go to the Environment Agency but you can use this service to send it to the undertaker too.
                        </p>
                        <p class="govuk-body">
                            Here are the contact details we hold for the undertaker of @reportSubmissionData.ReservoirRegName.
                        </p>

                        <dl class="govuk-summary-list govuk-!-margin-top-4">
                            
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Undertaker contact
                                </dt>
                                <dd class="govuk-summary-list__value govuk-!-padding-left-9" for="reservoir-named-undertaker"
                                    id="reservoir-named-undertaker" name="reservoir-named-undertaker">
                                    @reportSubmissionData.UndertakerName
                                </dd>
                            </div>
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Email
                                </dt>
                                <dd class="govuk-summary-list__value govuk-!-padding-left-9" for="reservoir-named-undertaker"
                                    id="reservoir-named-undertaker" name="reservoir-named-undertaker">
                                    @reportSubmissionData.UndertakerEmail
                                </dd>
                            </div>

                        </dl>

                        <EditForm Model="@_yesno" OnSubmit="GoToNextPage">
                            <div class="govuk-form-group govuk-!-margin-top-6 govuk-!-padding-top-8 govuk-!-margin-bottom-4">
                                <fieldset class="govuk-fieldset" aria-describedby="send-to-undertaker">
                                    <h2 id="send-to-undertaker" class="govuk-fieldset__legend govuk-fieldset__legend govuk-fieldset__legend--m">
                                        Do you want to send the statement to @reportSubmissionData.UndertakerName?
                                    </h2>

                                    <div class="govuk-radios" data-module="govuk-radios">
                                        <InputRadioGroup Name="yesno" @bind-Value="_yesno.YesNoOptions">
                                            @foreach (Enum value in Enum.GetValues(typeof(YesNoClass.YesNoEnum)))
                                            {
                                                if (value.ToString() == "UndertakerDetailsStatus")
                                                {
                                                    <div class="govuk-radios__item">
                                                        <InputRadio Value="@value" class="govuk-radios__input" />
                                                        <span class="govuk-label govuk-radios__label">No, the undertaker's details are wrong</span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="govuk-radios__item">
                                                        <InputRadio Value="@value" class="govuk-radios__input" />
                                                        <span class="govuk-label govuk-radios__label">@value</span>
                                                    </div>
                                                }
                                            }
                                        </InputRadioGroup>
                                    </div>
                                </fieldset>
                            </div>
                            <button type="submit" draggable="false"
                                    class="govuk-button govuk-!-margin-top-3 govuk-!-margin-bottom-6 govuk-!-margin-right-4"
                                    data-module="govuk-button">
                                Continue
                            </button>
                        </EditForm>

                    </div>
                }
                else
                {
                    <div class="govuk-error-summary" data-module="govuk-error-summary">
                        <div role="alert">
                            <h2 class="govuk-error-summary__title">
                                There is a problem
                            </h2>
                            <div class="govuk-error-summary__body">
                                <ul class="govuk-list govuk-error-summary__list">
                                    <li>
                                        <a href="#" onclick="return false;">Select yes if you want to send the statement to @reportSubmissionData.UndertakerName</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">

                        <h1 class="govuk-fieldset__heading">
                            Who the statement will go to
                        </h1>

                    </legend>

                    <p class="govuk-body govuk-!-padding-top-4">
                        The statement will go to the Environment Agency but you can use this service to send it to the
                        undertaker too.
                    </p>
                    <p class="govuk-body">
                        These are the details we hold for the undertaker.
                    </p>

                    <div class="govuk-!-margin-top-4 govuk-!-margin-bottom-8 govuk-!-padding-bottom-2">
                        <dl class="govuk-summary-list">

                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Undertaker contact
                                </dt>
                                <dd class="govuk-summary-list__value govuk-!-padding-left-9" for="reservoir-named-undertaker"
                                    id="reservoir-named-undertaker" name="reservoir-named-undertaker">
                                    @reportSubmissionData.UndertakerName
                                </dd>
                            </div>
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Email
                                </dt>
                                <dd class="govuk-summary-list__value govuk-!-padding-left-9" for="reservoir-named-undertaker"
                                    id="reservoir-named-undertaker" name="reservoir-named-undertaker">
                                    @reportSubmissionData.UndertakerEmail
                                </dd>
                            </div>
                        </dl>
                    </div>
                    <EditForm Model="@_yesno" OnSubmit="GoToNextPage">
                        <div class="govuk-form-group govuk-form-group--error govuk-!-margin-top-8 govuk-!-margin-bottom-4">
                            <fieldset class="govuk-fieldset" aria-describedby="where-do-you-live-error">
                                <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                                    <h2 class="govuk-fieldset__heading">
                                        Do you want to send the statement to @reportSubmissionData.UndertakerName?
                                    </h2>
                                </legend>
                                <div class="govuk-error-summary__body">
                                    <ul class="govuk-list govuk-error-summary__list">
                                        <li>
                                            <a href="#" onclick="return false;">Select yes if you want to send the statement to @reportSubmissionData.UndertakerName</a>
                                        </li>
                                    </ul>
                                </div>

                                <div class="govuk-radios" data-module="govuk-radios">
                                    <InputRadioGroup Name="yesno" @bind-Value="_yesno.YesNoOptions">
                                        @foreach (Enum value in Enum.GetValues(typeof(YesNoClass.YesNoEnum)))
                                        {
                                            if (value.ToString() == "UndertakerDetailsStatus")
                                            {
                                                <div class="govuk-radios__item">
                                                    <InputRadio Value="@value" class="govuk-radios__input" />
                                                    <span class="govuk-label govuk-radios__label">No, the undertaker's details are wrong</span>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="govuk-radios__item">
                                                    <InputRadio Value="@value" class="govuk-radios__input" />
                                                    <span class="govuk-label govuk-radios__label">@value</span>
                                                </div>
                                        }

                                    </InputRadioGroup>
                                </div>
                            </fieldset>
                        </div>
                        <button type="submit" draggable="false"
                                class="govuk-button govuk-!-margin-top-3 govuk-!-margin-bottom-6 govuk-!-margin-right-4"
                                data-module="govuk-button">
                            Continue
                        </button>
                    </EditForm>
                }
            </div>
        </div>
    </main>
</div>

<Footer />

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }

    public ReportSubmissionDataDto reportSubmissionData { get; set; } = new ReportSubmissionDataDto();

    protected async override Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthenticationStateTask;// AuthenticationStateProvider.GetAuthenticationStateAsync();
        var reportSubmissionDataState = await ProtectedSessionStore.GetAsync<ReportSubmissionDataDto>("CurrentReportSubmissionData");
        reportSubmissionData = reportSubmissionDataState.Value;
        await InvokeAsync(() =>
            {
                StateHasChanged();
            });
        await base.OnInitializedAsync();
    }
    private YesNoClass _yesno = new YesNoClass();
    private bool YesNoError { get; set; } = false;

    public async Task GoToNextPage()
    {
        if (_yesno.YesNoOptions == 0)
        {
            YesNoError = true;
            StateHasChanged();
        }
        else
        {
            YesNoError = false;
            var savedReportSubmissionData = await ProtectedSessionStore.GetAsync<ReportSubmissionDataDto>("CurrentReportSubmissionData");
            savedReportSubmissionData.Value.YesNoValueUndertaker = _yesno.YesNoOptions.ToString();
            await ProtectedSessionStore.SetAsync("CurrentReportSubmissionData", savedReportSubmissionData.Value);
            bool forceLoad = false;
            if (_yesno.YesNoOptions.ToString() == "Yes")
            {
                NavigationManager.NavigateTo("/send-your-statement-to-someone-also", forceLoad);
            }
            else
            {
                NavigationManager.NavigateTo("/send-your-statement-to-someone-else", forceLoad);
        }
    }
    public void GoToMyAccountPage()
    {
        bool forceLoad = true;
        string pagelink = "/my-account";
        NavigationManager.NavigateTo(pagelink, forceLoad);
    }
    public void GoToPrevPage()
    {
        bool forceLoad = true;
        string pagelink = "/send-or-resend-statement";
        NavigationManager.NavigateTo(pagelink, forceLoad);
    }
    public void GoToAnnualStatementsPage()
    {
        bool forceLoad = true;
        string pagelink = "/annual-statements";
        NavigationManager.NavigateTo(pagelink, forceLoad);
    }

    public class YesNoClass
    {
        public enum YesNoEnum { Yes = 1, No = 2, UndertakerDetailsStatus = 3 };
        public YesNoEnum YesNoOptions = 0;
    }
}