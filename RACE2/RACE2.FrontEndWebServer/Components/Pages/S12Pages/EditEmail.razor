@page "/edit-email"
@using Microsoft.AspNetCore.Authorization;
@using RACE2.FrontEndWebServer.Components
@using RACE2.Dto
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStore

<PageTitle>Edit Email - Statement sent - Send a supervising engineer's annual statement - GOV.UK</PageTitle>

<HeaderWithBanner />

<div class="govuk-width-container" style="min-height: 70vh;">

    <FeedbackBanner />

    <main class="govuk-main-wrapper govuk-main-wrapper--auto-spacing" id="main-content" role="main">
        <a class="govuk-back-link" @onclick="GoToPrevPage" style="color:black">Back</a>
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-xl">Edit email address</h1>

                <EditForm Model="@emailEditDelete" OnSubmit="UpdateEmail">
                    <div class="govuk-form-group">
                        <label class="govuk-label govuk-label--m" for="email-1">
                            Email address
                        </label>
                        <InputText class="govuk-textarea govuk-!-margin-top-6" id="more-detail" name="moreDetail" rows="5" Value-describedby="more-detail-hint" @bind-Value="emailEditDelete"></InputText>
                    </div>
                    <button type="submit" draggable="false"
                            class="govuk-button govuk-!-margin-top-3 govuk-!-margin-bottom-6 govuk-!-margin-right-4"
                            data-module="govuk-button">
                        Continue
                    </button>
                </EditForm>
            </div>
        </div>
    </main>
</div>

<Footer />

@code {
    public ReportSubmissionDataDto reportSubmissionData { get; set; } = new ReportSubmissionDataDto();
    private string emailEditDelete { get; set; } = "";
    protected async override Task OnInitializedAsync()
    {
        var reportSubmissionDataState = await ProtectedSessionStore.GetAsync<ReportSubmissionDataDto>("CurrentReportSubmissionData");
        reportSubmissionData = reportSubmissionDataState.Value;
        emailEditDelete = reportSubmissionData.EmailEditDelete;
        await base.OnInitializedAsync();
    }

    public void GoToPrevPage()
    {
        bool forceLoad = true;
        string pagelink = "/check-emails";
        NavigationManager.NavigateTo(pagelink, forceLoad);
    }

    public void UpdateEmail()
    {
        var changedEmail = emailEditDelete;
    }
 }