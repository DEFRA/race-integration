@page "/my-account"
@inject IConfiguration _config
@inject IBlobStorageService blobStorageService
@inject IOpenXMLUtilitiesService openXMLUtilitiesService
@inject IUserService userService
@inject IReservoirService reservoirService
@inject IJSRuntime jsRuntime
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@using RACE2.FrontEndWebServer.Components
@using RACE2.Dto;
@using RACE2.DataModel;
@using RACE2.Services;
@using DocumentFormat.OpenXml.InkML;
@using DocumentFormat.OpenXml.Spreadsheet;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Authorization;
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Identity;
@using System.Collections.Generic;
@using System.Data;
@using System.Globalization;
@using System.Linq;
@using System.Runtime.CompilerServices;
@using System.Security.Claims;
@using System.Text;
@attribute [Authorize]

<HeaderWithBanner />

<div class="govuk-width-container" style="min-height: 69vh;">

    <FeedbackBannerSignOut />

    <a class="govuk-back-link" @onclick="goback" style="color:black">Back</a>

    <main class="govuk-main-wrapper govuk-main-wrapper--auto-spacing" id="main-content" role="main">

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-three-quarters">

                <h1 class="govuk-heading-xl">
                    Your account
                </h1>

            </div>

            <div class="govuk-grid-column-three-quarters">

                <h2 class="govuk-heading-m">Your details</h2>
                <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Name
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @UserDetail.cFirstName @UserDetail.cLastName
                        </dd>
                        <dd class="govuk-summary-list__actions">
                            <a class="govuk-link" href="#">
                                Change<span class="govuk-visually-hidden"> name</span>
                            </a>
                        </dd>
                    </div>

                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Company address
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @UserAddress.AddressLine1
                            @if (!String.IsNullOrEmpty(UserAddress.AddressLine2))
                            {
                                <br>

                                @UserAddress.AddressLine2
                            }
                            @if (!String.IsNullOrEmpty(UserAddress.Town))
                            {
                                <br>

                                @UserAddress.Town
                            }
                            @if (!String.IsNullOrEmpty(UserAddress.County))
                            {
                                <br>

                                @UserAddress.County
                            }
                            @if (!String.IsNullOrEmpty(UserAddress.Postcode))
                            {
                                <br>

                                @UserAddress.Postcode
                            }
                        </dd>
                        <dd class="govuk-summary-list__actions">
                            <a class="govuk-link" href="#">
                                Change<span class="govuk-visually-hidden"> company address</span>
                            </a>
                        </dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Phone number
                        </dt>
                        <dd class="govuk-summary-list__value">
                            <p class="govuk-body">
                                @if (!String.IsNullOrEmpty(UserDetail.cMobile))
                                {
                                    @UserDetail.cMobile
                                }
                                else if (!String.IsNullOrEmpty(UserDetail.cAlternativeMobile))
                                {
                                    @UserDetail.cAlternativeMobile
                                }
                                else if (!String.IsNullOrEmpty(UserDetail.PhoneNumber))
                                {
                                    @UserDetail.PhoneNumber
                                }
                                else if (!String.IsNullOrEmpty(UserDetail.cAlternativePhone))
                                {
                                    @UserDetail.cAlternativePhone
                                }
                                else if (!String.IsNullOrEmpty(UserDetail.cEmergencyPhone))
                                {
                                    @UserDetail.cEmergencyPhone
                                }
                                else
                                {
                                    <span>N/A</span>
                                }
                            </p>
                        </dd>
                        <dd class="govuk-summary-list__actions">
                            <a class="govuk-link" href="#">
                                Change<span class="govuk-visually-hidden"> phone number</span>
                            </a>
                        </dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Email
                        </dt>
                        <dd class="govuk-summary-list__value">
                            <p class="govuk-body">@UserDetail.Email</p>
                        </dd>
                        <dd class="govuk-summary-list__actions">
                            <a class="govuk-link" href="#">
                                Change<span class="govuk-visually-hidden"> email</span>
                            </a>
                        </dd>
                    </div>
                    <div class="govuk-summary-list__row" id="paperless">
                        <dt class="govuk-summary-list__key">
                            Password
                        </dt>
                        <dd class="govuk-summary-list__value">
                            ******************
                        </dd>
                        <dd class="govuk-summary-list__actions">

                            <a class="govuk-link govuk-link--no-visited-state" href=@changePasswordUrl>

                                Change
                                <span class="govuk-visually-hidden">how we contact you</span>

                            </a>

                        </dd>
                    </div>

                </dl>

            </div>
        </div>
    </main>
</div>
<Footer />

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }
    //private int UserId { get; set; } = 0;
    private string UserName { get; set; } = "Unknown";
    private UserDetail UserDetail { get; set; } = new UserDetail();
    private Address UserAddress { get; set; } = new Address();

    private string changePasswordUrl = "";
    protected override async void OnInitialized()
    {
        try
        {
            changePasswordUrl = _config["RACE2SecurityProviderURL"] + "/Identity/Account/ChangeYourPassword";
            AuthenticationState authState = await AuthenticationStateTask; //AuthenticationStateProvider.GetAuthenticationStateAsync();
            UserName = authState.User.Claims.ToList().FirstOrDefault(c => c.Type == "name").Value;
            UserSpecificDto userDetails = await userService.GetUserByEmailID(UserName);
            UserAddress = userDetails.addresses[0];
            UserDetail = new UserDetail()
                {
                    UserName = UserName,
                    Id = userDetails.Id,
                    Email = userDetails.Email,
                    PhoneNumber = userDetails.PhoneNumber,
                    cFirstName = userDetails.cFirstName,
                    cLastName = userDetails.cLastName,
                    cMobile = userDetails.cMobile,
                    cAlternativePhone = userDetails.cAlternativePhone,
                    cAlternativeMobile = userDetails.cAlternativeMobile,
                    cAlternativeEmergencyPhone = userDetails.cAlternativeEmergencyPhone
                };
            await InvokeAsync(() =>
            {
                StateHasChanged();
            });
        }
        catch (Exception ex)
        {
            Serilog.Log.Logger.ForContext("User", UserName).ForContext("Application", "FrontEndWebServer").ForContext("Method", "MyAccount OnInitializedAsync").Fatal("Error getting data from backend services : " + ex.Message);
            throw new ApplicationException("Error loading my account page.");
        }
        finally
        {
            await base.OnInitializedAsync();
        }
    }

    private void goback()
    {
        bool forceLoad = true;
        NavigationManager.NavigateTo("/annual-statements", forceLoad);
    }
}