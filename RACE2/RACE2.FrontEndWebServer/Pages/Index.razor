@page "/"

@using System.Security.Claims
@using RACE2.FrontEndWebServer.Components
@using Microsoft.AspNetCore.Components.Authorization
@using  RACE2.Services
@inject NavigationManager NavigationManager
@inject IConfiguration _config
@inject IUserService userService

<Header/>

<div class="govuk-width-container ">   
    
<FeedbackBanner/>

<div class="govuk-grid-row">

    <div class="govuk-grid-column-two-thirds">

        <h1 class="govuk-heading-xl govuk-!-margin-top-8">
            Send a supervising engineer's annual statement
        </h1>

        <p class="govuk-body">You can use this service to:</p>
        <ul class="govuk-list govuk-list--bullet">
            <li>download a template for a section 12 statement</li>
            <li>upload the template once you've filled it in</li>
            <li>send it to the reservoir undertaker and the Environment Agency</li>
        </ul>

        <div class="govuk-inset-text">

            <p class="govuk-body">Do not use this service to send templates you've created yourself. You can email these to Reservoir Safety
                team.</p>
                 
             <p class="govuk-body">Email <a href="mailto:reservoirs@environment-agency.gov.uk"
                class="govuk-link">reservoirs@environment-agency.gov.uk</a></p>

        </div>


            <AuthorizeView>
                <NotAuthorized>
                    <button class="govuk-button govuk-button--start govuk-!-margin-top-2 govuk-!-margin-bottom-8"
                            data-module="govuk-button" @onclick="GoToLoginPage">
                        Start now
                        <svg class="govuk-button__start-icon" xmlns="http://www.w3.org/2000/svg" width="17.5" height="19"
                             viewBox="0 0 33 40" aria-hidden="true" focusable="false">
                            <path fill="currentColor" d="M0 0h13l20 20-20 20H0l20-20z"></path>
                        </svg>
                    </button>
                </NotAuthorized>
                <Authorized>
                    <button class="govuk-button govuk-button--start govuk-!-margin-top-2 govuk-!-margin-bottom-8"
                            data-module="govuk-button" @onclick="GoToNextPage">
                        Start now
                        <svg class="govuk-button__start-icon" xmlns="http://www.w3.org/2000/svg" width="17.5" height="19"
                             viewBox="0 0 33 40" aria-hidden="true" focusable="false">
                            <path fill="currentColor" d="M0 0h13l20 20-20 20H0l20-20z"></path>
                        </svg>
                    </button>
                </Authorized>
            </AuthorizeView>

        <h2 class="govuk-heading-m govuk-!-font-size-27 govuk-!-padding-top-2">Before you start</h2>

        <p class="govuk-body">To sign into the service for the first time, you'll need:</p>
        <ul class="govuk-list govuk-list--bullet">
            <li>the email related to your panel registration</li>
            <li>the temporary password the Environment Agency sent you</li>
        </ul>

        <p>Read about<a
                href="https://www.gov.uk/guidance/reservoir-supervising-engineers-written-statements-and-site-visit-reports"
                class="govuk-link govuk-link--no-visited-state"> supervising engineers' written statements
                and site visit reports</a></p>

        <h2 class="govuk-heading-m govuk-!-font-size-27 govuk-!-padding-top-6"> Get help using this service</h2>

        <p class="govuk-body"> You can <a href="#" class="govuk-link govuk-link--no-visited-state"> get help doing
                things online</a>.
        </p>
      </div>
  </div>
    <main class="govuk-main-wrapper govuk-main-wrapper--auto-spacing" id="main-content" role="main">

    </main>
</div>

<Footer />

@code{

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private IEnumerable<Claim>? Claims { get; set; }

    public string UserName { get; set; } = "Unknown";

    protected override async void OnInitialized()
    {
        AuthenticationState authState = await AuthenticationStateTask; //AuthenticationStateProvider.GetAuthenticationStateAsync();

        //if (authState.User.Claims is not null)
        //{
        //    NavigationManager.NavigateTo("/annual-statements", true);
        //}
    }

    private async void GoToLoginPage()
    {
        bool forceLoad = true;
        NavigationManager.NavigateTo("/login", forceLoad);
    }

    private async void GoToNextPage()
    {
        var authState = await AuthenticationStateTask;
        UserName = authState.User.Claims.ToList().FirstOrDefault(c => c.Type == "name").Value;

        var userDetails = await userService.GetUserByEmailID(UserName);
        bool forceLoad = true;
        if (userDetails.cIsFirstTimeUser)
        {
            string pagelink = _config["RACE2SecurityProviderURL"] + "/Identity/Account/CreatePassword?userEmail=" + UserName;
            NavigationManager.NavigateTo(pagelink, forceLoad);
        }
        else
        {
            NavigationManager.NavigateTo("/annual-statements", forceLoad);
        }
        //NavigationManager.NavigateTo("/choose-a-reservoir", forceLoad);
        //if (authState.User.Claims == null)
        //{
        //    Claims = authState.User.Claims;

        //    Claim? givenNameClaim = authState.User.FindFirst("name");
        //    if (givenNameClaim is not null)
        //    {
        //        UserName = givenNameClaim.Value;
        //    }
        //    NavigationManager.NavigateTo("/annual-statements", forceLoad);
        //}
        //else
        //{
        //    NavigationManager.NavigateTo("/login", forceLoad);
        //}
    }
}

