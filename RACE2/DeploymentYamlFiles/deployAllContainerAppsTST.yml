trigger:
- none
pr:
- none

resources:
- repo: self

variables:
 
  - name: repository_webapi
    value: 'race2webapi'  
  - name: dockerfile_webapi
    value: '$(Build.SourcesDirectory)/RACE2/Dockerfile_WebApi' 
  - name: repository_webapiexternal
    value: 'race2webapiexternal'
  - name: dockerfile_webapiexternal
    value: '$(Build.SourcesDirectory)/RACE2/Dockerfile_WebApiExternal'  
  - name: repository_frontendwebserver
    value: 'race2frontendwebserver'
  - name: dockerfile_frontendwebserver
    value: '$(Build.SourcesDirectory)/RACE2/Dockerfile_FrontEndWebServer'
  - name: repository_backendapiintegration
    value: 'race2backendapiintegration'
  - name: dockerfile_backendapiintegration
    value: '$(Build.SourcesDirectory)/RACE2/Dockerfile_BackendAPIIntegration'  
  - name: containerRegistry
    value: 'AZR-RAC-TST1-ACR'
  - name: tag
    value: '$(Build.BuildId)'
  - name: azureServiceConnection
    value: 'AZR-RAC-TST1'
  - name: resourceGroupName
    value: 'TSTRACINFRG1401'
  - name: templateFile
    value: '$(Build.SourcesDirectory)/RACE2/bicepfiles/createAllContainerApps.bicep'
  - name: parameterfile
    value: '$(Build.SourcesDirectory)/RACE2/DeploymentYamlFiles/deployAllContainerAppsParametersTST.json'

stages:
- stage: BuildAndPush
  displayName: Build and Push images
  jobs:
  - job: BuildAndPush
    displayName: Build and Push images
    pool:
      vmImage: ubuntu-latest
    steps:    
    - task: Docker@2
      displayName: Build and push an image - WebApi
      inputs:
        command: buildAndPush
        repository: ${{ variables.repository_webapi }}
        dockerfile: ${{ variables.dockerfile_webapi }}
        containerRegistry: ${{ variables.containerRegistry }}
        tags: ${{ variables.tag }}   
    - task: Docker@2
      displayName: Build and push an image - WebApiExternal
      inputs:
        command: buildAndPush
        repository: ${{ variables.repository_webapiexternal }}
        dockerfile: ${{ variables.dockerfile_webapiexternal }}
        containerRegistry: ${{ variables.containerRegistry }}
        tags: ${{ variables.tag }}       
    - task: Docker@2
      displayName: Build and push an image - FrontEndWebServer
      inputs:
        command: buildAndPush
        repository: ${{ variables.repository_frontendwebServer }}
        dockerfile: ${{ variables.dockerfile_frontendwebServer }}
        containerRegistry: ${{ variables.containerRegistry }}
        tags: ${{ variables.tag }}
    - task: Docker@2
      displayName: Build and push an image - BackendApiIntegration
      inputs:
        command: buildAndPush
        repository: ${{ variables.repository_backendapiintegration }}
        dockerfile: ${{ variables.dockerfile_backendapiintegration }}
        containerRegistry: ${{ variables.containerRegistry }}
        tags: ${{ variables.tag }}   

- stage : DeployContainerApps
  displayName: Deploy Container Apps to Azure Portal
  jobs:  
  - job: Deploy
    displayName: Deploy Container Apps to Azure Portal
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureCLI@2 
      displayName: 'Deploy Container Apps to Azure Portal' 
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        useGlobalConfig: false    
        inlineScript: |
          az deployment group create --resource-group $(resourceGroupName) --template-file $(templateFile) -p @$(parameterfile) tag='{tag:$(tag)}'
